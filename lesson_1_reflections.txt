REFLECTIONS:

How did viewing a diff between two versions of a file help you see the bug that was introduced?
The diff command showed the old line and new line with its content changed.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Having access to previous file versions allow me to seed the different changes made to that file, how to info is being added, and recover original information if it was lost in later file versions.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
The advantage of creating commit manually is that you can control the complexity of the logic change being completed and saved, on the oher side you can forget saving a logic change at certaint intervals and saved too much changes from one version to another. Making it too difficult to trace all changes. For this, automatic changes help save at regular intervals, but again it could save vary small changes or too much logic changes. You do not have control of creating commits at right moments.

Reflect: Multi-File Commits
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git allows saving multiple files in one commit because those files could be interralated to each other. One change could affect other files and it makes it easier to track all changes in interraleted files. 

Reflect: Using Git to View History
How can you use the commands git log and git diff to view the history of files?
git log shows all the file versions through the history of commits. Each commit is identified by its id, the date it was commited, the author, and the description of the change. git diff presents the chnages made between two successive commits. It highlights what was deleted and what was added between the two versions (commits).

Reflect: Confidence from Version Control
How might using version control make you more confident to make changes that could break something?
Version control provides an easy way to locate where errors are introduce. If errors are introduced, those errors can be traced back to the commit were they were introduced and fix them. 







